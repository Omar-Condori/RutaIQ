// Reglas de Firestore para RutaIQ
// Copia y pega estas reglas en Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función helper para verificar si el usuario es admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isDriver() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'driver';
    }
    
    function isPassenger() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'passenger';
    }
    
    // Usuarios pueden leer/escribir solo sus propios datos
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Empresas: admins pueden leer/escribir
    match /empresas/{empresaId} {
      allow read, write: if isAdmin();
    }
    
    // Conductores: admins pueden gestionar, conductores pueden leer sus propios datos
    match /drivers/{driverId} {
      allow read: if request.auth != null && 
        (isAdmin() || 
         resource.data.uid == request.auth.uid ||
         resource.data.empresaId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.empresaId);
      allow write: if isAdmin();
    }
    
    // Vehículos: admins pueden gestionar, todos pueden leer
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Líneas: admins pueden gestionar, todos pueden leer
    match /lines/{lineId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Quejas: usuarios pueden crear, admins pueden leer todas
    match /complaints/{complaintId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Posiciones: todos pueden leer, conductores pueden escribir
    match /positions/{positionId} {
      allow read: if request.auth != null;
      allow write: if isDriver();
    }
    
    // Rutas: todos pueden leer
    match /routes/{routeId} {
      allow read: if request.auth != null;
    }
    
    // Paradas: todos pueden leer
    match /stops/{stopId} {
      allow read: if request.auth != null;
    }
  }
}

