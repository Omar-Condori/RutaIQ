// Reglas de Firestore para RutaIQ
// Copia y pega estas reglas en Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Usuarios pueden leer/escribir solo sus propios datos
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admins pueden leer/escribir en admins
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.uid == adminId;
    }
    
    // Conductores pueden leer/escribir en drivers
    match /drivers/{driverId} {
      allow read, write: if request.auth != null && request.auth.uid == driverId;
    }
    
    // Quejas: usuarios autenticados pueden crear, admins pueden leer todas
    match /complaints/{complaintId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }
    
    // Empresas: solo admins pueden gestionar
    match /empresas/{empresaId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Líneas: usuarios autenticados pueden leer, admins pueden gestionar
    match /lines/{lineId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Vehículos: usuarios autenticados pueden leer, admins pueden gestionar
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}
